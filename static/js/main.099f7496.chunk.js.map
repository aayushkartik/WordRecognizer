{"version":3,"sources":["logo.svg","Components/proBar.js","Components/InputForm.js","App.js","reportWebVitals.js","index.js"],"names":["proBar","props","className","role","style","width","prog","InputForm","useState","original","uploadedfile","selectedLanguage","language","completedProgress","progress","Word","Extracted","class","type","onChange","event","target","files","placeholder","value","console","log","required","id","onClick","Tesseract","recognize","logger","m","then","text","data","alert","rows","cols","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,sCCWAA,MATf,SAAgBC,GACZ,OACI,qBAAKC,UAAU,8BAAf,SACA,qBAAKA,UAAU,WAAf,SACA,qBAAKA,UAAU,eAAeC,KAAK,cAAcC,MAAO,CAACC,MAAkB,IAAXJ,EAAMK,KAAS,KAAM,gBAA0B,IAAXL,EAAMK,KAAU,gBAAc,IAAI,gBAAc,aC8D7IC,EAhEG,WACd,MAA+BC,mBAAS,IAAxC,mBAAMC,EAAN,KAAeC,EAAf,KACA,EAAmCF,mBAAS,IAA5C,mBAAMG,EAAN,KAAuBC,EAAvB,KACA,EAAoCJ,mBAAS,GAA7C,mBAAMK,EAAN,KAAwBC,EAAxB,KACA,EAAwBN,mBAAS,IAAjC,mBAAMO,EAAN,KAAWC,EAAX,KAwBA,OACI,sBAAKd,UAAU,cAAf,UAEA,uDACA,sBAAKA,UAAU,cAAf,UACC,sBAAKe,MAAM,2BAAX,UACA,uBAAOC,KAAK,OAAOhB,UAAU,eAAiBiB,SA5B7B,SAACC,GACnBV,EAAaU,EAAMC,OAAOC,MAAM,OA4B/B,yBAAQ,aAAW,YAAYpB,UAAU,eAAeqB,YAAY,kBAAkBJ,SAXtE,SAACC,GACtBR,EAASQ,EAAMC,OAAOG,OACtBC,QAAQC,IAAIN,EAAMC,OAAOG,QAS8FG,UAAQ,EAA1H,UACI,wBAAQH,MAAM,GAAd,8CACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,uBACA,wBAAQA,MAAM,MAAd,mBACA,wBAAQA,MAAM,MAAd,qBACA,wBAAQA,MAAM,MAAd,yBAEJ,wBAAQtB,UAAU,kBAAkBgB,KAAK,SAASU,GAAG,wBAAwBC,QArCrE,WACS,KAAnBlB,EACHmB,IAAUC,UACPtB,EACCE,EACA,CAAEqB,OAAQ,SAAAC,GACVnB,EAASmB,EAAEnB,aACXoB,MAAK,YAAyB,IAAdC,EAAa,EAArBC,KAAQD,KAChBnB,EAAUmB,MAIVE,MAAM,iDAyBL,wBAICxB,EAAkB,GACf,mCACA,cAAC,EAAD,CAAQP,KAAMO,EAAd,2BAIiB,GAAnBA,GAA+B,KAAPE,GACtB,qCACA,0BAAUuB,KAAK,KAAKC,KAAK,KAAKf,MAAOT,IAAiB,8B,MCjDpDyB,MATf,WACE,OACE,qBAAKtC,UAAU,MAAf,SACA,cAAC,EAAD,OCKWuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.099f7496.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './InputForm.css';\r\nfunction proBar(props){\r\n    return(\r\n        <div className='container-sm prog-container'>\r\n        <div className=\"progress\">\r\n        <div className=\"progress-bar\" role=\"progressbar\" style={{width: props.prog*100+\"%\"}} aria-valuenow={props.prog*100} aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default proBar;","import React,{useState} from 'react';\r\nimport Tesseract from 'tesseract.js';\r\nimport ProBar from './proBar.js';\r\nimport './InputForm.css';\r\nconst InputForm = () =>{\r\n    const[original,uploadedfile] = useState(\"\");\r\n    const[selectedLanguage,language] = useState(\"\");\r\n    const[completedProgress,progress] = useState(0);\r\n    const[Word,Extracted] = useState(\"\");\r\n\r\n    const ImageAcceptor = (event) =>{\r\n        uploadedfile(event.target.files[0]);\r\n    } \r\nconst Extraction=()=>{\r\n    if(selectedLanguage!==\"\"){\r\n    Tesseract.recognize(\r\n       original,\r\n        selectedLanguage,\r\n        { logger: m => {\r\n        progress(m.progress)} }\r\n      ).then(({ data: { text } }) => {\r\n        Extracted(text);\r\n      })\r\n    }\r\n    else{\r\n        alert('language not selected please select language');\r\n    }\r\n}\r\nconst LanguageSelector = (event) => {\r\n    language(event.target.value);\r\n    console.log(event.target.value);\r\n}\r\n    return(\r\n        <div className=\"form-border\">\r\n\r\n        <h1> Image text extractor</h1>\r\n        <div className=\"inputFields\">\r\n         <div class=\"input-group container-sm\">\r\n         <input type=\"file\" className=\"form-control\"   onChange={ImageAcceptor}/>\r\n         <select aria-label=\"Last name\" className=\"form-control\" placeholder=\"Select language\" onChange={LanguageSelector} required>\r\n             <option value=\"\">Select language of text in image</option>\r\n             <option value=\"eng\">English</option>\r\n             <option value=\"hin\">Hindi</option>\r\n             <option value=\"pan\">Punjabi</option>\r\n             <option value=\"kan\">Kannada</option>\r\n             <option value=\"mal\">Malayalam</option>\r\n             <option value=\"tam\">Tamil</option>\r\n             <option value=\"ben\">Bengali</option>\r\n             <option value=\"san\">Sanskrit</option>\r\n            </select>\r\n         <button className=\"btn btn-primary\" type=\"button\" id=\"inputGroupFileAddon04\" onClick={Extraction}>Extract</button>\r\n         \r\n        </div>\r\n        {/* <ProBar prog={completedProgress}></ProBar> */}\r\n         {completedProgress>0 &&(\r\n             <>\r\n             <ProBar prog={completedProgress}>progress</ProBar>\r\n            </>\r\n         )}\r\n         </div>\r\n         { completedProgress!=0 && Word!==\"\" &&(\r\n             <>\r\n             <textarea rows=\"13\" cols=\"86\" value={Word}></textarea><br/>\r\n             </>\r\n         )}\r\n        </div>\r\n    )\r\n}\r\nexport default InputForm;","import logo from './logo.svg';\nimport InputForm from './Components/InputForm.js';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <InputForm></InputForm>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}